//Вызов конструктора базового класса из конструктора класса-наследника. Наследование. ООП C++ #102 - Видео №34.

#include<iostream>
#include<string>
using namespace std;

//---------------------------------------------------------
class A
{
public:
	A()
	{
		msg = "Пустое сообщение"; // Фраза по умолчани, если мы ничего не укажем.
		a = 8; // Данные по умолчанию.
	}

	A(string msg)
	{
		this->msg = msg;
	}

	A(string msg, int a)
	{
		this-> msg = msg;
		this-> a = a;
	}

	void PrintMsg()
	{
		cout << msg << endl;
		cout << a << endl;
	}

private:
	string msg;
	int a;
};
//---------------------------------------------------------
class B : public A
{
public:
	B():A("Наше новое сообщение", 9) // Если ничего не укажем, получим фразу заложенную по умолчанию. (тоесть "Пустое сообщение")
	{
		
	}
};
//---------------------------------------------------------
int main()
{
	setlocale(LC_ALL,"ru");

	A a;
	a.PrintMsg();

	cout << endl;

	B b;
	b.PrintMsg();

	return 0;
}
//---------------------------------------------------------
/*
Вот такой запись B():A() можно вызвать конструктор по умолчанию. Или, если хотим другой, а у нас их там 4, один из
которых по умолчанию, то мы в скобках A() пишем ту условие, которые были созданы в конструкторе.
*/